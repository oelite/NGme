{"version":3,"file":"list.js","sourceRoot":"","sources":["../../Volumes/Data/Projects/material2/tmp/broccoli_type_script_compiler-input_base_path-MGzNSvmZ.tmp/0/src/demo-app/components/list/list.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAUO,eAAe,CAAC,CAAA;AACvB,qBAAqC,mCAAmC,CAAC,CAAA;AAUzE;IAAA;IAAqB,CAAC;IARtB;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,sBAAsB;YAChC,IAAI,EAAE,EAAC,MAAM,EAAE,MAAM,EAAC;YACtB,QAAQ,EAAE,2BAA2B;YACrC,SAAS,EAAE,CAAC,UAAU,CAAC;YACvB,aAAa,EAAE,wBAAiB,CAAC,IAAI;SACtC,CAAC;;cAAA;IACmB,aAAC;AAAD,CAAC,AAAtB,IAAsB;AAAT,cAAM,SAAG,CAAA;AAEtB,0DAA0D;AAE1D;IAAA;IAA2B,CAAC;IAD5B;QAAC,gBAAS,CAAC,EAAE,QAAQ,EAAE,kBAAkB,EAAE,CAAC;;oBAAA;IACjB,mBAAC;AAAD,CAAC,AAA5B,IAA4B;AAAf,oBAAY,eAAG,CAAA;AAa5B;IAYE,oBAAoB,SAAmB,EAAU,QAAoB;QAAjD,cAAS,GAAT,SAAS,CAAU;QAAU,aAAQ,GAAR,QAAQ,CAAY;QAXrE,cAAS,GAAY,KAAK,CAAC;IAW6C,CAAC;IAJzE,sBAAI,kCAAU;aAAd,UAAe,MAAoB;YACjC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,gBAAgB,EAAE,MAAM,IAAI,IAAI,CAAC,CAAC;QAChG,CAAC;;;OAAA;IAID,qBAAqB;IACrB,uCAAkB,GAAlB;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,mBAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAClF,CAAC;IAED,iCAAY,GAAZ;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;IAED,gCAAW,GAAX;QACE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IApBD;QAAC,sBAAe,CAAC,aAAM,CAAC;;8CAAA;IAExB;QAAC,mBAAY,CAAC,YAAY,CAAC;;;gDAAA;IAlB7B;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,+BAA+B;YACzC,IAAI,EAAE;gBACJ,MAAM,EAAE,UAAU;gBAClB,SAAS,EAAE,gBAAgB;gBAC3B,QAAQ,EAAE,eAAe;aAC1B;YACD,WAAW,EAAE,gBAAgB;YAC7B,aAAa,EAAE,wBAAiB,CAAC,IAAI;SACtC,CAAC;;kBAAA;IA2BF,iBAAC;AAAD,CAAC,AA1BD,IA0BC;AA1BY,kBAAU,aA0BtB,CAAA;AAEY,0BAAkB,GAAG,CAAC,MAAM,EAAE,UAAU,EAAE,aAAM,EAAE,YAAY,CAAC,CAAC","sourcesContent":["import {\n    Component,\n    ViewEncapsulation,\n    ContentChildren,\n    ContentChild,\n    QueryList,\n    Directive,\n    ElementRef,\n    Renderer,\n    AfterContentInit,\n} from '@angular/core';\nimport { MdLine, MdLineSetter } from '@angular2-material/core/line/line';\n\n@Component({\n  moduleId: module.id,\n  selector: 'md-list, md-nav-list',\n  host: {'role': 'list'},\n  template: '<ng-content></ng-content>',\n  styleUrls: ['list.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class MdList {}\n\n/* Need directive for a ContentChild query in list-item */\n@Directive({ selector: '[md-list-avatar]' })\nexport class MdListAvatar {}\n\n@Component({\n  moduleId: module.id,\n  selector: 'md-list-item, a[md-list-item]',\n  host: {\n    'role': 'listitem',\n    '(focus)': '_handleFocus()',\n    '(blur)': '_handleBlur()',\n  },\n  templateUrl: 'list-item.html',\n  encapsulation: ViewEncapsulation.None\n})\nexport class MdListItem implements AfterContentInit {\n  _hasFocus: boolean = false;\n\n  private _lineSetter: MdLineSetter;\n\n  @ContentChildren(MdLine) _lines: QueryList<MdLine>;\n\n  @ContentChild(MdListAvatar)\n  set _hasAvatar(avatar: MdListAvatar) {\n    this._renderer.setElementClass(this._element.nativeElement, 'md-list-avatar', avatar != null);\n  }\n\n  constructor(private _renderer: Renderer, private _element: ElementRef) {}\n\n  /** TODO: internal */\n  ngAfterContentInit() {\n    this._lineSetter = new MdLineSetter(this._lines, this._renderer, this._element);\n  }\n\n  _handleFocus() {\n    this._hasFocus = true;\n  }\n\n  _handleBlur() {\n    this._hasFocus = false;\n  }\n}\n\nexport const MD_LIST_DIRECTIVES = [MdList, MdListItem, MdLine, MdListAvatar];\n"]}