{"version":3,"file":"AuthorizedView.js","sourceRoot":"","sources":["../../../../../Volumes/Data/OElite/cosmos/public/OEme/tmp/broccoli_type_script_compiler-input_base_path-7nMsUUjz.tmp/0/src/app/core/framework/ui/view/AuthorizedView.ts"],"names":[],"mappings":";;;;;;AAAA,uBAAqB,UAAU,CAAC,CAAA;AAIhC,sBAAoB,sBAAsB,CAAC,CAAA;AAE3C,wBAAwB,+BAA+B,CAAC,CAAA;AACxD;;GAEG;AAGH;IAA6C,kCAAM;IAI/C,wBAAY,QAAmB,EAAU,aAA2B,EAAE,MAAa,EAAE,MAAa;QAJtG,iBA2BC;QAtBO,kBAAM,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;QADK,kBAAa,GAAb,aAAa,CAAc;QAGhE,aAAa,CAAC,oBAAoB,CAAC,SAAS,CAAC,UAAA,MAAM;YAC/C,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,GAAG,CAAC,CAAC;gBACd,KAAI,CAAC,WAAW,GAAG,MAAM,CAAC;QAClC,CAAC,CAAC,CAAA;IACN,CAAC;IAED,iCAAQ,GAAR;QAAA,iBAaC;QAZG,gBAAK,CAAC,QAAQ,WAAE,CAAC;QACjB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;QACvE,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,UAAA,CAAC;gBACzC,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,mBAAS,CAAC,CAAC;YACzC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;gBACR,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBACP,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,mBAAS,CAAC,CAAC;gBACzC,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;IAEL,CAAC;IAxBa,2BAAY,GAAU,eAAe,GAAG,aAAK,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC;IAyBrF,qBAAC;AAAD,CAAC,AA3BD,CAA6C,eAAM,GA2BlD;AA3BqB,sBAAc,iBA2BnC,CAAA","sourcesContent":["import {OEView} from \"./OEView\";\nimport {SignInService} from \"../../../abstractions/users/signin.service\";\nimport {User} from \"../../../abstractions/users/user\";\nimport {OEAppState} from \"../../OEAppState\";\nimport {Utils} from \"../../../utils/funcs\";\nimport {Router} from \"@angular/router\";\nimport {loginPath} from \"../../../../../custom/globals\";\n/**\n * Created by mleader1 on 04/07/2016.\n */\n\n\nexport abstract class AuthorizedView extends OEView {\n    public currentUser:User;\n    public static viewSelector:string = \"oe-auth-view-\" + Utils.NewGuid().toString();\n\n    constructor(appState:OEAppState, private signInService:SignInService, router:Router, viewId:string) {\n        super(appState, router, viewId);\n\n        signInService.onUserAuthenticated$.subscribe(result=> {\n            if (result.id > 0)\n                this.currentUser = result;\n        })\n    }\n\n    ngOnInit() {\n        super.ngOnInit();\n        this.currentUser = this.currentUser || this.signInService.loggedInUser;\n        if (this.currentUser == null) {\n            this.signInService.Authenticate(true).catch(e=> {\n                this.router.navigateByUrl(loginPath);\n            }).then((res)=> {\n                if (!res) {\n                    this.router.navigateByUrl(loginPath);\n                }\n            });\n        }\n\n    }\n}"]}