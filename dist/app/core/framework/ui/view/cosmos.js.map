{"version":3,"file":"cosmos.js","sourceRoot":"","sources":["../../../../../Volumes/Data/OElite/cosmos/public/OEme/tmp/broccoli_type_script_compiler-input_base_path-7nMsUUjz.tmp/0/src/app/core/framework/ui/view/cosmos.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2C,eAAe,CAAC,CAAA;AAC3D,uBAAwC,iBAAiB,CAAC,CAAA;AAC1D,iCAAoB,2BAA2B,CAAC,CAAA;AAChD,wBAAyB,+BAA+B,CAAC,CAAA;AACzD,2BAAyB,kBAAkB,CAAC,CAAA;AAC5C,sBAAoB,sBAAsB,CAAC,CAAA;AAE3C;;;;;;;GAOG;AAYH;IAEI,yBAAoB,YAAkB,EAAS,QAAmB,EAAU,MAAa;QAArE,iBAAY,GAAZ,YAAY,CAAM;QAAS,aAAQ,GAAR,QAAQ,CAAW;QAAU,WAAM,GAAN,MAAM,CAAO;QACrF,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QACxC,sDAAsD;QACtD,qCAAqC;QACrC,MAAM;QACN,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAED,qCAAW,GAAX;QACI,IAAI,OAAO,GAAG,aAAK,CAAC,UAAU,CAAC,oBAAU,CAAC,CAAC;QAC3C,GAAG,CAAC,CAAe,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO,CAAC;YAAtB,IAAI,MAAM,gBAAA;YACX,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;SACrD;IACL,CAAC;IAzBL;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,MAAM;YAChB,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,UAAU,EAAE,CAAC,0BAAiB,CAAC;YAC/B,SAAS,EAAE,EAAE;YACb,aAAa,EAAE,wBAAiB,CAAC,IAAI;YACrC,QAAQ,EAAE,iCAAiC;SAC9C,CAAC;;uBAAA;IAyBF,sBAAC;AAAD,CAAC,AAtBD,IAsBC;AAtBY,uBAAe,kBAsB3B,CAAA","sourcesContent":["import {Component, ViewEncapsulation} from \"@angular/core\";\nimport {ROUTER_DIRECTIVES, Router} from \"@angular/router\";\nimport {Title} from \"@angular/platform-browser\";\nimport {OE_MODULES} from \"../../../../../custom/modules\";\nimport {OEAppState} from \"../../OEAppState\";\nimport {Utils} from \"../../../utils/funcs\";\n\n/**\n * Created by mleader1 on 27/06/2016.\n * CosmosComponent Concepts:\n * 1. It's a container built to host all components within the app; i.e. from single login page to complicated\n * modularized multi-masterpages views.\n * 2. It should be able to understand all registered routes so to render components accordingly\n * 3. It should be considered to have a global setting section, working like a Commander panel.\n */\n\n@Component({\n    selector: 'body',\n    moduleId: module.id,\n    directives: [ROUTER_DIRECTIVES],\n    providers: [],\n    encapsulation: ViewEncapsulation.None,\n    template: '<router-outlet></router-outlet>'\n})\n\n\nexport class CosmosComponent {\n\n    constructor(private titleService:Title, public appState:OEAppState, private router:Router) {\n        titleService.setTitle(appState.appName);\n        // appState.onMasterPageChange$.subscribe((result)=> {\n        //     this.reloadMasterPage(result);\n        // });\n        this.initModules();\n    }\n\n    initModules() {\n        var modules = Utils.flatArrays(OE_MODULES);\n        for (var module of modules) {\n            this.appState.moduleState.registereModule(module);\n        }\n    }\n\n    // reloadMasterPage(route:IOERoute):void {\n    //     this.router.navigateByUrl(route.path);\n    //\n    // }\n\n}\n"]}