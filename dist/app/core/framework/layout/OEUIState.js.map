{"version":3,"file":"OEUIState.js","sourceRoot":"","sources":["../../../../Volumes/Data/OElite/cosmos/public/OEme/tmp/broccoli_type_script_compiler-input_base_path-7nMsUUjz.tmp/0/src/app/core/framework/layout/OEUIState.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAyB,eAAe,CAAC,CAAA;AACzC,sBAAoB,mBAAmB,CAAC,CAAA;AACxC;;GAEG;AAGH;IAeI;;;;;;;OAOG;IACH,mBAAY,OAAgB,EAAE,OAAgB,EAAE,SAAkB,EAAE,SAAiB;QArB9E,cAAS,GAAU,aAAK,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC;QAC9C,YAAO,GAAW,IAAI,CAAC;QACvB,YAAO,GAAW,KAAK,CAAC;QACxB,cAAS,GAAW,KAAK,CAAC;QAE1B,aAAQ,GAAU,EAAE,CAAC;QACrB,cAAS,GAAU,EAAE,CAAC;QAC7B;;;WAGG;QACI,aAAQ,GAAW,KAAK,CAAC;QAW5B,IAAI,CAAC,SAAS,GAAG,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC;QAC7C,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC;QACvC,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC;QACvC,IAAI,CAAC,SAAS,GAAG,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC;IAEjD,CAAC;IA9BL;QAAC,iBAAU,EAAE;;iBAAA;IAgCb,gBAAC;AAAD,CAAC,AA/BD,IA+BC;AA/BY,iBAAS,YA+BrB,CAAA","sourcesContent":["import {Injectable} from \"@angular/core\";\nimport {Utils} from \"../../utils/funcs\";\n/**\n * Created by mleader1 on 30/06/2016.\n */\n\n@Injectable()\nexport class OEUIState {\n\n    public stateName:string = Utils.NewGuid().toString();\n    public visible:boolean = true;\n    public isFixed:boolean = false;\n    public isFloated:boolean = false;\n\n    public cssClass:string = '';\n    public cssInline:string = '';\n    /**\n     * define whether the ui element is currently active (i.e. opened, focused etc.)\n     * @type {boolean}\n     */\n    public isActive:boolean = false;\n\n    /**\n     * define a UI state of a view/layout\n     * @param visible - whether the viewComponent in the layout will be visible (if false it will not be rendered)\n     * @param isFixed - whether the viewComponent in the layout will be static/fixed in position\n     * @param isFloated - whether the viewComponent in the layout will be floated (overlay).\n     * @param oeMetaData - any additional meta data to be passed in\n     * @param stateName - state name (unique) to be applied, which will be stored in localStorage\n     */\n    constructor(visible?:boolean, isFixed?:boolean, isFloated?:boolean, stateName?:string) {\n        this.stateName = stateName || this.stateName;\n        this.visible = visible || this.visible;\n        this.isFixed = isFixed || this.isFixed;\n        this.isFloated = isFloated || this.isFloated;\n\n    }\n\n}"]}