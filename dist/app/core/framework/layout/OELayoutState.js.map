{"version":3,"file":"OELayoutState.js","sourceRoot":"","sources":["../../../../Volumes/Data/OElite/cosmos/public/OEme/tmp/broccoli_type_script_compiler-input_base_path-7nMsUUjz.tmp/0/src/app/core/framework/layout/OELayoutState.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;;GAEG;AACH,qBAAyB,eAAe,CAAC,CAAA;AAEzC,sBAA2B,oDAAoD,CAAC,CAAA;AAEhF;IACI,6BAAmB,MAAa,EAAS,mBAAkC;QAAxD,WAAM,GAAN,MAAM,CAAO;QAAS,wBAAmB,GAAnB,mBAAmB,CAAe;IAC3E,CAAC;IACL,0BAAC;AAAD,CAAC,AAHD,IAGC;AAHY,2BAAmB,sBAG/B,CAAA;AAID;IAKI;QACI,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,mBAAmB,GAAG,IAAI,oBAAY,EAAuB,CAAC;IACvE,CAAC;IAEM,gCAAQ,GAAf,UAAgB,aAA2B,EAAE,MAAa;QACtD,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;QACtB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,aAAa,CAAC,CAAC;IAEhD,CAAC;IAEM,gCAAQ,GAAf,UAAgB,UAAyB,EAAE,MAAa;QAEpD,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YACb,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;YACtB,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,UAAU,CAAC,aAAa,CAAC,GAAG,UAAU,CAAC;YAC7D,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,mBAAmB,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC;QAC/E,CAAC;IACL,CAAC;IAGD,kCAAU,GAAV,UAAW,SAAwB;QAC/B,MAAM,CAAC,SAAS,IAAI,IAAI,IAAI,SAAS,CAAC,UAAU,EAAE,CAAC;IACvD,CAAC;IA9BL;QAAC,iBAAU,EAAE;;qBAAA;IAgCb,oBAAC;AAAD,CAAC,AA9BD,IA8BC;AA9BY,qBAAa,gBA8BzB,CAAA","sourcesContent":["/**\n * Created by mleader1 on 29/06/2016.\n */\nimport {Injectable} from \"@angular/core\";\nimport {OELayoutConfig, LayoutSection} from \"./OELayoutConfig\";\nimport {EventEmitter} from \"@angular/platform-browser-dynamic/src/facade/async\";\n\nexport class OELayoutStateChange {\n    constructor(public viewId:string, public updatedLayoutConfig:OELayoutConfig) {\n    }\n}\n\n@Injectable()\n//extend OELayoutState if your class is specifically used for defining a layout\nexport class OELayoutState {\n    public layouts:Array<OELayoutConfig>;\n\n    public rootLayoutsUpdated$:EventEmitter<OELayoutStateChange>;\n\n    constructor() {\n        this.layouts = [];\n        this.rootLayoutsUpdated$ = new EventEmitter<OELayoutStateChange>();\n    }\n\n    public getState(layoutSection:LayoutSection, viewId:string):OELayoutConfig {\n        viewId = viewId || '';\n        return this.layouts[viewId + layoutSection];\n\n    }\n\n    public setState(definition:OELayoutConfig, viewId:string):void {\n\n        if (definition) {\n            viewId = viewId || '';\n            this.layouts[viewId + definition.layoutSection] = definition;\n            this.rootLayoutsUpdated$.emit(new OELayoutStateChange(viewId, definition));\n        }\n    }\n\n\n    isViewable(layoutSet:OELayoutConfig):boolean {\n        return layoutSet != null && layoutSet.isViewable();\n    }\n\n}\n"]}