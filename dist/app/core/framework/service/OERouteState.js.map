{"version":3,"file":"OERouteState.js","sourceRoot":"","sources":["../../../../Volumes/Data/OElite/cosmos/public/OEme/tmp/broccoli_type_script_compiler-input_base_path-7nMsUUjz.tmp/0/src/app/core/framework/service/OERouteState.ts"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;;;;AAEH,qBAAuC,eAAe,CAAC,CAAA;AAIvD;IAmDI;QA9CO,WAAM,GAAc,EAAE,CAAC;QA+C1B,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,qBAAqB,GAAG,IAAI,mBAAY,EAAY,CAAC;QAC1D,IAAI,CAAC,oBAAoB,GAAG,IAAI,mBAAY,EAAY,CAAC;IAE7D,CAAC;IAjDO,oCAAa,GAArB,UAAsB,KAAc;QAChC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACR,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxB,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC3C,CAAC;IACL,CAAC;IAEM,qCAAc,GAArB,UAAsB,MAAiB;QACnC,EAAE,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAC9B,GAAG,CAAC,CAAc,UAAM,EAAN,iBAAM,EAAN,oBAAM,EAAN,IAAM,CAAC;gBAApB,IAAI,KAAK,eAAA;gBACV,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;aAC7B;QACL,CAAC;IACL,CAAC;IAEM,sCAAe,GAAtB,UAAuB,IAAW;QAC9B,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACP,IAAI,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAC/C,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;gBAChB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;gBACrE,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAClD,CAAC;QACL,CAAC;IACL,CAAC;IAEM,sCAAe,GAAtB,UAAuB,IAAW;QAC9B,IAAI,YAAY,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACtC,EAAE,CAAC,CAAC,YAAY,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;YAC7B,YAAY,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAC7C,EAAE,CAAC,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YAC3B,YAAY,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC,EAAE,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACtE,IAAI,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,UAAA,IAAI;YACxC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,YAAY,IAAI,EAAE,CAAC,CAAA;QAC/F,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,CAAC,cAAc,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC;YAC5C,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QAC7B,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAEO,iCAAU,GAAlB;QACI,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACrB,CAAC;IAjDL;QAAC,iBAAU,EAAE;;oBAAA;IA0Db,mBAAC;AAAD,CAAC,AAzDD,IAyDC;AAzDY,oBAAY,eAyDxB,CAAA","sourcesContent":["/**\n * Created by mleader1 on 04/07/2016.\n */\n\nimport {Injectable, EventEmitter} from \"@angular/core\";\nimport {IOERoute} from \"../IOEModule\";\n\n@Injectable()\nexport class OERouteState {\n\n    public onNewRouteRegistered$:EventEmitter<IOERoute>;\n    public onRouteDeregistered$:EventEmitter<IOERoute>;\n\n    public routes:IOERoute[] = [];\n\n    public  registerRoute(route:IOERoute):void {\n        if (route) {\n            this.routes.push(route);\n            this.onNewRouteRegistered$.emit(route);\n        }\n    }\n\n    public registerRoutes(routes:IOERoute[]):void {\n        if (routes && routes.length > 0) {\n            for (var route of routes) {\n                this.registerRoute(route);\n            }\n        }\n    }\n\n    public deregisterRoute(path:string):void {\n        if (path) {\n            var existingRoute = this.findRouteByPath(path);\n            if (existingRoute) {\n                this.routes = this.routes.splice(this.routes.indexOf(existingRoute));\n                this.onRouteDeregistered$.emit(existingRoute);\n            }\n        }\n    }\n\n    public findRouteByPath(path:string):IOERoute {\n        var filteredPath = path.toLowerCase();\n        if (filteredPath.startsWith('/'))\n            filteredPath = filteredPath.substring(1);\n        if (filteredPath.endsWith('/'))\n            filteredPath = filteredPath.substring(0, filteredPath.length - 1);\n        var existingRoutes = this.routes.filter(item=> {\n            return (item.path.toLowerCase() == filteredPath) || (item.name == '' && filteredPath == '')\n        });\n        if (existingRoutes && existingRoutes.length > 0)\n            return existingRoutes[0];\n        return null;\n    }\n\n    public  initRoutes():void {\n        this.routes = [];\n    }\n\n\n    constructor() {\n        this.initRoutes();\n        this.onNewRouteRegistered$ = new EventEmitter<IOERoute>();\n        this.onRouteDeregistered$ = new EventEmitter<IOERoute>();\n\n    }\n}"]}