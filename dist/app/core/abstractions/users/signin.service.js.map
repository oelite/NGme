{"version":3,"file":"signin.service.js","sourceRoot":"","sources":["../../../../Volumes/Data/OElite/cosmos/public/OEme/tmp/broccoli_type_script_compiler-input_base_path-7nMsUUjz.tmp/0/src/app/core/abstractions/users/signin.service.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Created by mleader1 on 29/06/2016.\n */\n\n\nimport {Injectable} from \"@angular/core\";\nimport {ApiGateway} from \"../../framework\";\nimport {Observable, BehaviorSubject} from \"rxjs/Rx\";\nimport {EventEmitter} from \"@angular/platform-browser-dynamic/src/facade/async\";\nimport {User} from \"./user\";\nimport {Http, Response} from \"@angular/http\";\nimport {apiBaseUrl, apiClientId} from \"../../../../custom/globals\";\nimport {ApiContentType} from \"../../framework/service/ApiGateway\";\nimport {CookieService} from \"angular2-cookie/core\";\n\n\n@Injectable()\nexport class SignInService extends ApiGateway {\n\n    CurrentUser_Info:string = 'oe.users.currentUserInfo';\n    CurrentUser_Roles:string = 'oe.roles.currentUserRoles';\n\n    url(relativePath:string):string {\n        if (!relativePath.startsWith('/'))\n            relativePath = '/' + relativePath;\n        return apiBaseUrl + relativePath;\n    }\n\n    public get loggedInUser():User {\n        if (this.UserTimeStamp) {\n            var user = JSON.parse(localStorage.getItem(this.CurrentUser_Info));\n            if (user && user.id > 0)\n                return user;\n        }\n        return null;\n    }\n\n    public set loggedInUser(value:User) {\n        localStorage.setItem(this.CurrentUser_Info, JSON.stringify(value));\n    }\n\n    public get loggedInUserRoles():string[] {\n        return JSON.parse(localStorage.getItem(this.CurrentUser_Roles));\n    }\n\n    public set loggedInUserRoles(value:string[]) {\n        localStorage.setItem(this.CurrentUser_Roles, JSON.stringify(value));\n    }\n\n    public onUserAuthenticated$:EventEmitter<User>;\n    public onUserAuthorized$:EventEmitter<string>;\n\n    constructor(http:Http, cookies:CookieService) {\n        super(http, cookies);\n\n        this.loggedInUser = null;\n        this.loggedInUserRoles = [];\n\n        this.onUserAuthenticated$ = new EventEmitter<User>();\n        this.onUserAuthorized$ = new EventEmitter<string>();\n    }\n\n\n    Authenticate(emitEvent:boolean = false):Promise<boolean> {\n\n        return this.post(this.url('/users/myinfo'), {}, {}).toPromise().then((result)=> {\n            if (result && result.id > 0) {\n                this.loggedInUser = result;\n            }\n            else\n                this.loggedInUser = null;\n\n            if (emitEvent)\n                this.onUserAuthenticated$.emit(result);\n            return (result && result.id > 0);\n        });\n\n    }\n\n    Authorize(emailOrUsername:string, password:string, emitEvent:boolean = false):Promise<boolean> {\n        return this.SignIn(emailOrUsername, password, emitEvent);\n    }\n\n    SignIn(emailOrUsername:string, password:string, emitEvent:boolean = true):Promise<boolean> {\n\n        return this.post(this.url('/token'), {\n            'grant_type': 'password',\n            'scope': '*',\n            'client_id': apiClientId,\n            'username': emailOrUsername,\n            'password': password\n        }, {}, {}, ApiContentType.WwwForm).toPromise().then((result)=> {\n            if (result && result.access_token) {\n                this.UserAuthToken = result.access_token;\n                this.Authenticate(emitEvent);\n                if (emitEvent) {\n                    this.onUserAuthorized$.emit(result.access_token);\n                }\n                this.UserTimeStamp = new Date();\n                return true;\n            }\n            else {\n                this.UserTimeStamp = null;\n                return false;\n            }\n        }).catch((ex)=> {\n            if (ex && ex.error) {\n                if (ex.error == \"invalid_grant\" ||\n                    ex.error.indexOf(\"invalid\") >= 0) {\n                    this.UserTimeStamp = null;\n                    return false;\n                }\n            }\n            Observable.throw(ex);\n        });\n\n    }\n\n}"]}