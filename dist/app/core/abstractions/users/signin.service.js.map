{"version":3,"file":"signin.service.js","sourceRoot":"","sources":["../../../../Volumes/Data/OElite/cosmos/public/OEme/tmp/broccoli_type_script_compiler-input_base_path-1mTS1K7M.tmp/0/src/app/core/abstractions/users/signin.service.ts"],"names":[],"mappings":"AAAA;;GAEG;;;;;;;;;;;;;;;;AAGH,qBAA+C,eAAe,CAAC,CAAA;AAC/D,0BAAyB,iBAAiB,CAAC,CAAA;AAE3C,qBAA6B,eAAe,CAAC,CAAA;AAC7C,wBAAsC,4BAA4B,CAAC,CAAA;AACnE,2BAA6B,oCAAoC,CAAC,CAAA;AAClE,qBAA4B,sBAAsB,CAAC,CAAA;AAInD;IAAmC,iCAAU;IAoCzC,uBAAY,IAAU,EAAE,OAAsB;QAC1C,kBAAM,IAAI,EAAE,OAAO,CAAC,CAAC;QAnCzB,qBAAgB,GAAW,0BAA0B,CAAC;QACtD,sBAAiB,GAAW,2BAA2B,CAAC;QAoCpD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC1B,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;QAG7C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;QAE5B,IAAI,CAAC,oBAAoB,GAAG,IAAI,mBAAY,EAAQ,CAAC;QACrD,IAAI,CAAC,iBAAiB,GAAG,IAAI,mBAAY,EAAU,CAAC;IACxD,CAAC;IA3CD,2BAAG,GAAH,UAAI,YAAoB;QACpB,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;YAC9B,YAAY,GAAG,GAAG,GAAG,YAAY,CAAC;QACtC,MAAM,CAAC,oBAAU,GAAG,YAAY,CAAC;IACrC,CAAC;IAED,sBAAW,uCAAY;aAAvB;YACI,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;gBACrB,IAAI,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBAC3D,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;gBAChC,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;oBACpB,MAAM,CAAC,IAAI,CAAC;YACpB,CAAC;YACD,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;aAED,UAAwB,KAAW;YAC/B,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;QACvE,CAAC;;;OAJA;IAMD,sBAAW,4CAAiB;aAA5B;YACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;QACpE,CAAC;aAED,UAA6B,KAAe;YACxC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;QACxE,CAAC;;;OAJA;IAwBD,oCAAY,GAAZ,UAAa,SAA0B;QAAvC,iBAiBC;QAjBY,yBAA0B,GAA1B,iBAA0B;QACnC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,UAAA,MAAM;YAC1D,EAAE,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC1B,KAAI,CAAC,YAAY,GAAG,MAAM,CAAC;YAC/B,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,OAAO,CAAC,GAAG,CAAC,oEAAoE,CAAC,CAAC;gBAClF,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YAC7B,CAAC;YAED,EAAE,CAAC,CAAC,SAAS,CAAC;gBACV,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC3C,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,EAAE,GAAG,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,KAAK,CAAC,UAAA,EAAE;YACnB,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YAChB,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,iCAAS,GAAT,UAAU,eAAuB,EAAE,QAAgB,EAAE,SAA0B;QAA1B,yBAA0B,GAA1B,iBAA0B;QAC3E,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;IAC7D,CAAC;IAED,8BAAM,GAAN,UAAO,eAAuB,EAAE,QAAgB,EAAE,SAAyB;QAA3E,iBA6BC;QA7BiD,yBAAyB,GAAzB,gBAAyB;QAEvE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;YACjC,YAAY,EAAE,UAAU;YACxB,OAAO,EAAE,GAAG;YACZ,WAAW,EAAE,qBAAW;YACxB,UAAU,EAAE,eAAe;YAC3B,UAAU,EAAE,QAAQ;SACvB,EAAE,EAAE,EAAE,EAAE,EAAE,2BAAc,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,UAAA,MAAM;YACzC,EAAE,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;gBAChC,KAAI,CAAC,aAAa,GAAG,MAAM,CAAC,YAAY,CAAC;gBACzC,KAAI,CAAC,aAAa,GAAG,IAAI,IAAI,EAAE,CAAC;gBAChC,MAAM,CAAC,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,UAAA,UAAU;oBAC/C,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;wBACZ,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;oBACrD,CAAC;oBACD,MAAM,CAAC,UAAU,CAAC;gBACtB,CAAC,CAAC,CAAC;YACP,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC;QAEL,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,KAAK,CAAC,UAAA,EAAE;YACnB,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YAChB,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IAEP,CAAC;IAxGL;QAAC,iBAAU,EAAE;;qBAAA;IA0Gb,oBAAC;AAAD,CAAC,AAzGD,CAAmC,sBAAU,GAyG5C;AAzGY,qBAAa,gBAyGzB,CAAA","sourcesContent":["/**\n * Created by mleader1 on 29/06/2016.\n */\n\n\nimport {Injectable, EventEmitter, Inject} from \"@angular/core\";\nimport {ApiGateway} from \"../../framework\";\nimport {User} from \"./user\";\nimport {Http, Response} from \"@angular/http\";\nimport {apiBaseUrl, apiClientId} from \"../../../../custom/globals\";\nimport {ApiContentType} from \"../../framework/service/ApiGateway\";\nimport {CookieService} from \"angular2-cookie/core\";\n\n\n@Injectable()\nexport class SignInService extends ApiGateway {\n\n    CurrentUser_Info: string = 'oe.users.currentUserInfo';\n    CurrentUser_Roles: string = 'oe.roles.currentUserRoles';\n\n    url(relativePath: string): string {\n        if (!relativePath.startsWith('/'))\n            relativePath = '/' + relativePath;\n        return apiBaseUrl + relativePath;\n    }\n\n    public get loggedInUser(): User {\n        if (this.UserTimeStamp) {\n            var userInfo = localStorage.getItem(this.CurrentUser_Info);\n            var user = JSON.parse(userInfo);\n            if (user && user.id > 0)\n                return user;\n        }\n        return null;\n    }\n\n    public set loggedInUser(value: User) {\n        localStorage.setItem(this.CurrentUser_Info, JSON.stringify(value));\n    }\n\n    public get loggedInUserRoles(): string[] {\n        return JSON.parse(localStorage.getItem(this.CurrentUser_Roles));\n    }\n\n    public set loggedInUserRoles(value: string[]) {\n        localStorage.setItem(this.CurrentUser_Roles, JSON.stringify(value));\n    }\n\n    public onUserAuthenticated$: EventEmitter<User>;\n    public onUserAuthorized$: EventEmitter<string>;\n\n    constructor(http: Http, cookies: CookieService) {\n        super(http, cookies);\n\n        console.log(this.cookies);\n        console.log('constructor of signin service');\n\n\n        this.loggedInUser = null;\n        this.loggedInUserRoles = [];\n\n        this.onUserAuthenticated$ = new EventEmitter<User>();\n        this.onUserAuthorized$ = new EventEmitter<string>();\n    }\n\n\n    Authenticate(emitEvent: boolean = false): Promise<boolean> {\n        return this.post(this.url('/users/myinfo'), {}, {}).map(result=> {\n            if (result && result.id > 0) {\n                this.loggedInUser = result;\n            }\n            else {\n                console.log('user info not returned from server, local data will now be erased.');\n                this.loggedInUser = null;\n            }\n\n            if (emitEvent)\n                this.onUserAuthenticated$.emit(result);\n            return result && result.id > 0;\n        }).toPromise().catch(ex=> {\n            console.log(ex);\n            return Promise.resolve(false);\n        });\n    }\n\n    Authorize(emailOrUsername: string, password: string, emitEvent: boolean = false): Promise<boolean> {\n        return this.SignIn(emailOrUsername, password, emitEvent);\n    }\n\n    SignIn(emailOrUsername: string, password: string, emitEvent: boolean = true): Promise<boolean> {\n\n        return this.post(this.url('/token'), {\n            'grant_type': 'password',\n            'scope': '*',\n            'client_id': apiClientId,\n            'username': emailOrUsername,\n            'password': password\n        }, {}, {}, ApiContentType.WwwForm).map(result=> {\n            if (result && result.access_token) {\n                this.UserAuthToken = result.access_token;\n                this.UserTimeStamp = new Date();\n                return this.Authenticate(emitEvent).then(authResult=> {\n                    if (emitEvent) {\n                        this.onUserAuthorized$.emit(result.access_token);\n                    }\n                    return authResult;\n                });\n            }\n            else {\n                this.UserTimeStamp = null;\n                return false;\n            }\n\n        }).toPromise().catch(ex=> {\n            console.log(ex);\n            return Promise.resolve(false);\n        });\n\n    }\n\n}"]}